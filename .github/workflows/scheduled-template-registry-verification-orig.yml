name: Template Registry Verification

defaults:
  run:
    shell: bash

on:
  schedule:
    - cron: "*/5 * * * *"
  issue_comment:
    types: [created]

jobs:
  create-issue:
    name: Create "Template Registry Verification" Issue
    runs-on: ubuntu-latest
    if: (github.event_name == 'issue_comment' && github.event.comment.body == '/debug-registry-verification')
    permissions:
      issues: write
    outputs:
      issue-number: ${{ steps.issue.outputs.issue-number }}
    steps:
      - name: Get today's date
        id: date
        run: |
          echo "::set-output name=today::$(date '+%m/%d/%Y')"
      - name: Create "Template Registry Verification" Issue
        uses: imjohnbo/issue-bot@v3.3.6
        id: issue
        with:
          labels: "verify-template-registry"
          title: '"Template Registry Verification" (${{ steps.date.outputs.today }})'
          body: |
            ### Template Registry Verification
          pinned: false
          close-previous: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  create-branch:
    name: Create a new branch to store registry.json changes
    runs-on: ubuntu-latest
    needs: [create-issue]
    outputs:
      branch-name: ${{ steps.branch.outputs.branch-name }}
    steps:
      - name: Get a branch name
        id: branch
        run: |
          echo "::set-output name=branch-name::verify-template-registry-$(date '+%Y-%m-%d-%H-%M')"
      - name: Create a new branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        with:
          branch: ${{ steps.branch.outputs.branch-name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  check-packages-validity:
    name: Remove unavailable packages, get packages that have new versions
    runs-on: ubuntu-latest
    needs: [create-issue, create-branch]
    outputs:
      error: ${{ steps.check-packages-validity.outputs.error }}
      packages-to-update: ${{ steps.check-packages-validity.outputs.packages-to-update }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.create-branch.outputs.branch-name }}
      - name: Install dependencies
        run: npm install
      - name: Remove unavailable packages, get packages that have new versions
        id: check-packages-validity
        run: node src/check-packages-validity.js ${{ needs.create-issue.outputs.issue-number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit and push changes
        uses: EndBug/add-and-commit@v8
        with:
          add: registry.json
          default_author: github_actions
          message: Update registry.json
          push: true
  update-packages-info:
    name: Update packages information
    runs-on: ubuntu-latest
    needs: [check-packages-validity]
    if: ${{ needs.check-packages-validity.outputs.packages-to-update != '' }}
    strategy:
      matrix: ${{ fromJSON(needs.check-packages-validity.outputs.packages-to-update) }}
    steps:
      - run: |
          echo ${{ matrix.packagesToUpdate }}
      - name: Validate template
        uses: ./.github/workflows/validate-template-workflow.yml
        with:
          github-link: ${{ matrix.packagesToUpdate.packageName }}
          npm-link: ${{ matrix.packagesToUpdate.packageNpmUrl }}
          npm-package: ${{ matrix.packagesToUpdate.packageGithubUrl }}
